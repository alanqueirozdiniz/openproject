# fix for Rails CVE 2013-1854
# this file should be removed from initializers once we are at rails 2.3.18+
# see: https://groups.google.com/forum/#!topic/ruby-security-ann/o0Dsdk2WrQ0

require 'active_record'
require 'active_support'

module ActiveRecord
  class Base
    def self.expand_hash_conditions_for_aggregates(attrs)
      expanded_attrs = {}
      attrs.each do |attr, value|
        # before rails 2.3.18
        # unless (aggregation = reflect_on_aggregation(attr.to_sym)).nil?
        # with 2.3.18+
        unless (aggregation = reflect_on_aggregation(attr)).nil?
          mapping = aggregate_mapping(aggregation)
          mapping.each do |field_attr, aggregate_attr|
            if mapping.size == 1 && !value.respond_to?(aggregate_attr)
              expanded_attrs[field_attr] = value
            else
              expanded_attrs[field_attr] = value.send(aggregate_attr)
            end
          end
        else
          expanded_attrs[attr] = value
        end
      end
      expanded_attrs
    end
  end

  module Reflection
    def self.create_reflection(macro, name, options, active_record)
      case macro
        when :has_many, :belongs_to, :has_one, :has_and_belongs_to_many
          klass = options[:through] ? ThroughReflection : AssociationReflection
          reflection = klass.new(macro, name, options, active_record)
        when :composed_of
          reflection = AggregateReflection.new(macro, name, options, active_record)
      end
      write_inheritable_hwia :reflections, name => reflection
      reflection
    end
  end
end

class Class
  def write_inheritable_hwia(key, hash)
    write_inheritable_attribute(key, {}.with_indifferent_access) if read_inheritable_attribute(key).nil?
    write_inheritable_attribute(key, read_inheritable_attribute(key).merge(hash))
  end
end
